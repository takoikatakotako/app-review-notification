{
  "version": 4,
  "terraform_version": "1.1.6",
  "serial": 13,
  "lineage": "c2c86fc6-35d5-4ebc-430c-570a3c92a9ad",
  "outputs": {},
  "resources": [
    {
      "module": "module.dynamodb",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "news_table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:ap-northeast-1:397693451628:table/slack-table",
            "attribute": [
              {
                "name": "slackToken",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "global_secondary_index": [],
            "hash_key": "slackToken",
            "id": "slack-table",
            "local_secondary_index": [],
            "name": "slack-table",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 1,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "",
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 1
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.web_api",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "api_gateway_lambda_role_policy_document",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4192902640",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\",\n        \"dynamodb:*\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "dynamodb:*",
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.web_api",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "policy_document",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3693445097",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "lambda.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.web_api",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "api_gateway_lambda_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::397693451628:policy/api-gateway-lambda-role-policy",
            "description": "",
            "id": "arn:aws:iam::397693451628:policy/api-gateway-lambda-role-policy",
            "name": "api-gateway-lambda-role-policy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\",\"dynamodb:*\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAVZGDAPVWE2YN5737A",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.web_api.data.aws_iam_policy_document.api_gateway_lambda_role_policy_document"
          ]
        }
      ]
    },
    {
      "module": "module.web_api",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "api_gateway_lambda_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::397693451628:role/api-gateway-lambda-role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2022-06-08T15:27:56Z",
            "description": "",
            "force_detach_policies": false,
            "id": "api-gateway-lambda-role",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::397693451628:policy/api-gateway-lambda-role-policy"
            ],
            "max_session_duration": 3600,
            "name": "api-gateway-lambda-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAVZGDAPVWE6SK34MED"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.web_api.data.aws_iam_policy_document.policy_document"
          ]
        }
      ]
    },
    {
      "module": "module.web_api",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "api_gateway_lambda_role_policy_attachment",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "api-gateway-lambda-role-20220608152757950800000001",
            "policy_arn": "arn:aws:iam::397693451628:policy/api-gateway-lambda-role-policy",
            "role": "api-gateway-lambda-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.web_api.aws_iam_policy.api_gateway_lambda_role_policy",
            "module.web_api.aws_iam_role.api_gateway_lambda_role",
            "module.web_api.data.aws_iam_policy_document.api_gateway_lambda_role_policy_document",
            "module.web_api.data.aws_iam_policy_document.policy_document"
          ]
        }
      ]
    },
    {
      "module": "module.web_api.module.check_function",
      "mode": "data",
      "type": "archive_file",
      "name": "python_script_archive_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/archive\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "excludes": null,
            "id": "29937fe01d02b806ac82f52fda36989359a1ae18",
            "output_base64sha256": "KnSX6RLjTewX/8xekI2TMvQo54hXPVhL8Vp8w5zFQ4Y=",
            "output_file_mode": null,
            "output_md5": "3bf23a147d1a46bdaee94e7e31d0dfd7",
            "output_path": "web_api/lambda_function/output/check_function_archive_file.zip",
            "output_sha": "29937fe01d02b806ac82f52fda36989359a1ae18",
            "output_size": 1120,
            "source": [
              {
                "content": "import json\nimport boto3\nimport urllib\n\n\n\ndef lambda_handler(event, context):\n    \n    print(event)\n    print(context)\n    \n    \n    \n    # body = json.loads(event['body'])\n    \n    # token = body['token']\n    # app_id = body['appId']\n    \n    token = 'hello'\n\n    # すでにあるかチェック\n    \n    \n    # 保存する\n    dynamoDB = boto3.resource('dynamodb')\n    table = dynamoDB.Table('slack-table')\n    \n    # table.put_item(\n    #     Item = {\n    #         'slackToken': token\n    #     }\n    # )\n    response = table.get_item(Key={\"slackToken\": \"https://hooks.slack.com/services/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\"})\n    item = response['Item']\n    sent_entries = item['sentEntries']\n\n\n    # チェックする\n    url = 'https://itunes.apple.com/jp/rss/customerreviews/id=674401547/sortBy=mostRecent/json'\n\n    response = urllib.request.urlopen(url)\n    content = json.loads(response.read().decode('utf8'))\n\n    feed = content['feed']\n    entries = feed['entry']\n\n\n    \n    new_ids = []\n\n\n    for entry in entries:\n        id = entry['id']['label']\n        \n        if id not in sent_entries :\n\n            url = 'https://hooks.slack.com/services/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'\n            method = \"POST\"\n            headers = {\"Content-Type\" : \"application/json\"}\n\n            # PythonオブジェクトをJSONに変換する\n            obj = {'text' : 'Hello, World!'} \n            json_data = json.dumps(obj).encode(\"utf-8\")\n\n            # httpリクエストを準備してPOST\n            request = urllib.request.Request(url, data=json_data, method=method, headers=headers)\n            with urllib.request.urlopen(request) as response:\n                response_body = response.read().decode(\"utf-8\")\n                print(response_body)\n                new_ids.append(id)\n\n            \n    # マージ\n    sent_entries += new_ids\n\n\n    # 更新\n    item['sentEntries'] = sent_entries\n\n    #         \n    table.put_item(Item=item)\n\n\n\n\n    return {\n        'statusCode': 200,\n        'body': json.dumps(item)\n    }\n",
                "filename": "lambda_function.py"
              }
            ],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": null,
            "source_file": null,
            "type": "zip"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.web_api.module.check_function",
      "mode": "data",
      "type": "template_file",
      "name": "python_script_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "46b2978b5b9ac98530c90ed85028a1fe3bbd06c3d9d32e4f1b2bc86d21aaeb55",
            "rendered": "import json\nimport boto3\nimport urllib\n\n\n\ndef lambda_handler(event, context):\n    \n    print(event)\n    print(context)\n    \n    \n    \n    # body = json.loads(event['body'])\n    \n    # token = body['token']\n    # app_id = body['appId']\n    \n    token = 'hello'\n\n    # すでにあるかチェック\n    \n    \n    # 保存する\n    dynamoDB = boto3.resource('dynamodb')\n    table = dynamoDB.Table('slack-table')\n    \n    # table.put_item(\n    #     Item = {\n    #         'slackToken': token\n    #     }\n    # )\n    response = table.get_item(Key={\"slackToken\": \"https://hooks.slack.com/services/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\"})\n    item = response['Item']\n    sent_entries = item['sentEntries']\n\n\n    # チェックする\n    url = 'https://itunes.apple.com/jp/rss/customerreviews/id=674401547/sortBy=mostRecent/json'\n\n    response = urllib.request.urlopen(url)\n    content = json.loads(response.read().decode('utf8'))\n\n    feed = content['feed']\n    entries = feed['entry']\n\n\n    \n    new_ids = []\n\n\n    for entry in entries:\n        id = entry['id']['label']\n        \n        if id not in sent_entries :\n\n            url = 'https://hooks.slack.com/services/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'\n            method = \"POST\"\n            headers = {\"Content-Type\" : \"application/json\"}\n\n            # PythonオブジェクトをJSONに変換する\n            obj = {'text' : 'Hello, World!'} \n            json_data = json.dumps(obj).encode(\"utf-8\")\n\n            # httpリクエストを準備してPOST\n            request = urllib.request.Request(url, data=json_data, method=method, headers=headers)\n            with urllib.request.urlopen(request) as response:\n                response_body = response.read().decode(\"utf-8\")\n                print(response_body)\n                new_ids.append(id)\n\n            \n    # マージ\n    sent_entries += new_ids\n\n\n    # 更新\n    item['sentEntries'] = sent_entries\n\n    #         \n    table.put_item(Item=item)\n\n\n\n\n    return {\n        'statusCode': 200,\n        'body': json.dumps(item)\n    }\n",
            "template": "import json\nimport boto3\nimport urllib\n\n\n\ndef lambda_handler(event, context):\n    \n    print(event)\n    print(context)\n    \n    \n    \n    # body = json.loads(event['body'])\n    \n    # token = body['token']\n    # app_id = body['appId']\n    \n    token = 'hello'\n\n    # すでにあるかチェック\n    \n    \n    # 保存する\n    dynamoDB = boto3.resource('dynamodb')\n    table = dynamoDB.Table('slack-table')\n    \n    # table.put_item(\n    #     Item = {\n    #         'slackToken': token\n    #     }\n    # )\n    response = table.get_item(Key={\"slackToken\": \"https://hooks.slack.com/services/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\"})\n    item = response['Item']\n    sent_entries = item['sentEntries']\n\n\n    # チェックする\n    url = 'https://itunes.apple.com/jp/rss/customerreviews/id=674401547/sortBy=mostRecent/json'\n\n    response = urllib.request.urlopen(url)\n    content = json.loads(response.read().decode('utf8'))\n\n    feed = content['feed']\n    entries = feed['entry']\n\n\n    \n    new_ids = []\n\n\n    for entry in entries:\n        id = entry['id']['label']\n        \n        if id not in sent_entries :\n\n            url = 'https://hooks.slack.com/services/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'\n            method = \"POST\"\n            headers = {\"Content-Type\" : \"application/json\"}\n\n            # PythonオブジェクトをJSONに変換する\n            obj = {'text' : 'Hello, World!'} \n            json_data = json.dumps(obj).encode(\"utf-8\")\n\n            # httpリクエストを準備してPOST\n            request = urllib.request.Request(url, data=json_data, method=method, headers=headers)\n            with urllib.request.urlopen(request) as response:\n                response_body = response.read().decode(\"utf-8\")\n                print(response_body)\n                new_ids.append(id)\n\n            \n    # マージ\n    sent_entries += new_ids\n\n\n    # 更新\n    item['sentEntries'] = sent_entries\n\n    #         \n    table.put_item(Item=item)\n\n\n\n\n    return {\n        'statusCode': 200,\n        'body': json.dumps(item)\n    }\n",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.web_api.module.check_function",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "lambda_function",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:ap-northeast-1:397693451628:function:test-function",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "DISCORD_WEBHOOK_URL": "xxx"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": "web_api/lambda_function/output/check_function_archive_file.zip",
            "function_name": "test-function",
            "handler": "lambda_function.lambda_handler",
            "id": "test-function",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:397693451628:function:test-function/invocations",
            "kms_key_arn": "",
            "last_modified": "2022-06-08T15:40:20.000+0000",
            "layers": [],
            "memory_size": 128,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:ap-northeast-1:397693451628:function:test-function:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::397693451628:role/service-role/test-function-role-j6x0audo",
            "runtime": "python3.9",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "source_code_hash": "KnSX6RLjTewX/8xekI2TMvQo54hXPVhL8Vp8w5zFQ4Y=",
            "source_code_size": 1120,
            "tags": {},
            "tags_all": {},
            "timeout": 30,
            "timeouts": {
              "create": null
            },
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.web_api.module.check_function.data.archive_file.python_script_archive_file"
          ]
        }
      ]
    },
    {
      "module": "module.web_front",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "iam_policy_document",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4077681542",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AddPerm\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:GetObject\",\n      \"Resource\": \"arn:aws:s3:::sandbox-web-front-bucket/*\",\n      \"Principal\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "s3:GetObject"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "*"
                    ],
                    "type": "*"
                  }
                ],
                "resources": [
                  "arn:aws:s3:::sandbox-web-front-bucket/*"
                ],
                "sid": "AddPerm"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.web_front",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "s3_bucket",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::sandbox-web-front-bucket",
            "bucket": "sandbox-web-front-bucket",
            "bucket_domain_name": "sandbox-web-front-bucket.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "sandbox-web-front-bucket.s3.ap-northeast-1.amazonaws.com",
            "cors_rule": [
              {
                "allowed_headers": [
                  "*"
                ],
                "allowed_methods": [
                  "GET"
                ],
                "allowed_origins": [
                  "*"
                ],
                "expose_headers": [],
                "max_age_seconds": 3000
              }
            ],
            "force_destroy": false,
            "grant": [
              {
                "id": "5d0f466ce156fda9af0f84fae483b5e92fe53a3365d4f206265ed8686f1acc7b",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z2M4EHUR26P7ZW",
            "id": "sandbox-web-front-bucket",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"AddPerm\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Action\":\"s3:GetObject\",\"Resource\":\"arn:aws:s3:::sandbox-web-front-bucket/*\"}]}",
            "region": "ap-northeast-1",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {},
            "tags_all": {},
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [
              {
                "error_document": "",
                "index_document": "index.html",
                "redirect_all_requests_to": "",
                "routing_rules": ""
              }
            ],
            "website_domain": "s3-website-ap-northeast-1.amazonaws.com",
            "website_endpoint": "sandbox-web-front-bucket.s3-website-ap-northeast-1.amazonaws.com"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.web_front",
      "mode": "managed",
      "type": "aws_s3_bucket_cors_configuration",
      "name": "cors_configuration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "sandbox-web-front-bucket",
            "cors_rule": [
              {
                "allowed_headers": [
                  "*"
                ],
                "allowed_methods": [
                  "GET"
                ],
                "allowed_origins": [
                  "*"
                ],
                "expose_headers": [],
                "id": "",
                "max_age_seconds": 3000
              }
            ],
            "expected_bucket_owner": "",
            "id": "sandbox-web-front-bucket"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.web_front.aws_s3_bucket.s3_bucket"
          ]
        }
      ]
    },
    {
      "module": "module.web_front",
      "mode": "managed",
      "type": "aws_s3_bucket_policy",
      "name": "s3_bucket_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "sandbox-web-front-bucket",
            "id": "sandbox-web-front-bucket",
            "policy": "{\"Statement\":[{\"Action\":\"s3:GetObject\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Resource\":\"arn:aws:s3:::sandbox-web-front-bucket/*\",\"Sid\":\"AddPerm\"}],\"Version\":\"2012-10-17\"}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.web_front.aws_s3_bucket.s3_bucket",
            "module.web_front.data.aws_iam_policy_document.iam_policy_document"
          ]
        }
      ]
    },
    {
      "module": "module.web_front",
      "mode": "managed",
      "type": "aws_s3_bucket_website_configuration",
      "name": "website_configuration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "sandbox-web-front-bucket",
            "error_document": [],
            "expected_bucket_owner": "",
            "id": "sandbox-web-front-bucket",
            "index_document": [
              {
                "suffix": "index.html"
              }
            ],
            "redirect_all_requests_to": [],
            "routing_rule": [],
            "routing_rules": "",
            "website_domain": "s3-website-ap-northeast-1.amazonaws.com",
            "website_endpoint": "sandbox-web-front-bucket.s3-website-ap-northeast-1.amazonaws.com"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.web_front.aws_s3_bucket.s3_bucket"
          ]
        }
      ]
    }
  ]
}
