{
  "version": 4,
  "terraform_version": "1.1.6",
  "serial": 73,
  "lineage": "c2c86fc6-35d5-4ebc-430c-570a3c92a9ad",
  "outputs": {},
  "resources": [
    {
      "module": "module.dynamodb",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "news_table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:ap-northeast-1:397693451628:table/slack-table",
            "attribute": [
              {
                "name": "slackToken",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "global_secondary_index": [],
            "hash_key": "slackToken",
            "id": "slack-table",
            "local_secondary_index": [],
            "name": "slack-table",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 1,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "",
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 1
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "build_image_assume_role_policy_document",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1003443403",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"CodebuildExecution\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"codebuild.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "codebuild.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "CodebuildExecution"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "build_image_role_policy_document",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2417841357",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Logging\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"PushECR\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ecr:UploadLayerPart\",\n        \"ecr:PutImage\",\n        \"ecr:ListImages\",\n        \"ecr:InitiateLayerUpload\",\n        \"ecr:GetRepositoryPolicy\",\n        \"ecr:GetDownloadUrlForLayer\",\n        \"ecr:GetAuthorizationToken\",\n        \"ecr:DescribeRepositories\",\n        \"ecr:DescribeImages\",\n        \"ecr:CompleteLayerUpload\",\n        \"ecr:BatchGetImage\",\n        \"ecr:BatchCheckLayerAvailability\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"codebuild:UpdateReport\",\n        \"codebuild:CreateReportGroup\",\n        \"codebuild:CreateReport\",\n        \"codebuild:BatchPutTestCases\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "Logging"
              },
              {
                "actions": [
                  "ecr:BatchCheckLayerAvailability",
                  "ecr:BatchGetImage",
                  "ecr:CompleteLayerUpload",
                  "ecr:DescribeImages",
                  "ecr:DescribeRepositories",
                  "ecr:GetAuthorizationToken",
                  "ecr:GetDownloadUrlForLayer",
                  "ecr:GetRepositoryPolicy",
                  "ecr:InitiateLayerUpload",
                  "ecr:ListImages",
                  "ecr:PutImage",
                  "ecr:UploadLayerPart"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "PushECR"
              },
              {
                "actions": [
                  "codebuild:BatchPutTestCases",
                  "codebuild:CreateReport",
                  "codebuild:CreateReportGroup",
                  "codebuild:UpdateReport"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "413450221",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"iam:PassRole\",\n        \"ecs:RunTask\",\n        \"ecr:GetDownloadUrlForLayer\",\n        \"ecr:GetAuthorizationToken\",\n        \"ecr:BatchGetImage\",\n        \"ecr:BatchCheckLayerAvailability\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "ecr:BatchCheckLayerAvailability",
                  "ecr:BatchGetImage",
                  "ecr:GetAuthorizationToken",
                  "ecr:GetDownloadUrlForLayer",
                  "ecs:RunTask",
                  "iam:PassRole",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1410407306",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": [\n          \"events.amazonaws.com\",\n          \"ecs.amazonaws.com\",\n          \"ecs-tasks.amazonaws.com\"\n        ]\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ecs-tasks.amazonaws.com",
                      "ecs.amazonaws.com",
                      "events.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "data",
      "type": "template_file",
      "name": "api_buildspec_template_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "e1e8c11155e76d0fce1ef4778af15f3eb4ecf8f7dcb4522189d68ec297b7158c",
            "rendered": "version: 0.2\nphases:\n  pre_build:\n    commands:\n      - echo Logging in to Amazon ECR...\n      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository\n  build:\n    commands:\n      - DATE=`date +%Y-%m-%d`\n      - COMMIT_ID=$(git log -n 1 --format=%H)\n      - cd notification_batch/Docker\n      - docker build -t 397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository:$DATE -t 397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository:$COMMIT_ID -t 397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository:latest .\n  post_build:\n    commands:\n      - echo post_build\n      - docker push 397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository\n      - echo ----------------------------------------------------------\n      - echo 397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository:$COMMIT_ID としてイメージをプッシュしました\n      - echo ----------------------------------------------------------\n",
            "template": "version: 0.2\nphases:\n  pre_build:\n    commands:\n      - echo Logging in to Amazon ECR...\n      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${repository_url}\n  build:\n    commands:\n      - DATE=`date +%Y-%m-%d`\n      - COMMIT_ID=$(git log -n 1 --format=%H)\n      - cd notification_batch/Docker\n      - docker build -t ${repository_url}:$DATE -t ${repository_url}:$COMMIT_ID -t ${repository_url}:latest .\n  post_build:\n    commands:\n      - echo post_build\n      - docker push ${repository_url}\n      - echo ----------------------------------------------------------\n      - echo ${repository_url}:$COMMIT_ID としてイメージをプッシュしました\n      - echo ----------------------------------------------------------\n",
            "vars": {
              "repository_url": "397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "data",
      "type": "template_file",
      "name": "notification_batch_container_definitions",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "db2868e16caee6fffb365322d882851a4c063eecd52fa47bfabf3824887e199e",
            "rendered": "[\n  {\n    \"cpu\": 0,\n    \"environment\": [\n      {\n        \"name\": \"NAME\",\n        \"value\": \"おのじゅん\"\n      }\n    ],\n    \"name\": \"ojichat\",\n    \"image\": \"397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository\",\n    \"logConfiguration\": {\n      \"logDriver\": \"awslogs\",\n      \"secretOptions\": null,\n      \"options\": {\n        \"awslogs-group\": \"/ecs/ojichat-task\",\n        \"awslogs-region\": \"ap-northeast-1\",\n        \"awslogs-stream-prefix\": \"ecs\"\n      }\n    },\n    \"essential\": true\n  }\n]\n",
            "template": "[\n  {\n    \"cpu\": 0,\n    \"environment\": [\n      {\n        \"name\": \"NAME\",\n        \"value\": \"おのじゅん\"\n      }\n    ],\n    \"name\": \"ojichat\",\n    \"image\": \"397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository\",\n    \"logConfiguration\": {\n      \"logDriver\": \"awslogs\",\n      \"secretOptions\": null,\n      \"options\": {\n        \"awslogs-group\": \"/ecs/ojichat-task\",\n        \"awslogs-region\": \"ap-northeast-1\",\n        \"awslogs-stream-prefix\": \"ecs\"\n      }\n    },\n    \"essential\": true\n  }\n]\n",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "managed",
      "type": "aws_cloudwatch_event_rule",
      "name": "schedule_rule",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:events:ap-northeast-1:397693451628:rule/ojichat-event",
            "description": "",
            "event_bus_name": "default",
            "event_pattern": null,
            "id": "ojichat-event",
            "is_enabled": true,
            "name": "ojichat-event",
            "name_prefix": "",
            "role_arn": "",
            "schedule_expression": "cron(* * * * ? *)",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "managed",
      "type": "aws_codebuild_project",
      "name": "build_notification_batch_image",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:codebuild:ap-northeast-1:397693451628:project/build-notification-batch-image",
            "artifacts": [
              {
                "artifact_identifier": "",
                "bucket_owner_access": "",
                "encryption_disabled": false,
                "location": "",
                "name": "",
                "namespace_type": "",
                "override_artifact_name": false,
                "packaging": "",
                "path": "",
                "type": "NO_ARTIFACTS"
              }
            ],
            "badge_enabled": false,
            "badge_url": "",
            "build_batch_config": [],
            "build_timeout": 10,
            "cache": [
              {
                "location": "",
                "modes": [
                  "LOCAL_DOCKER_LAYER_CACHE",
                  "LOCAL_SOURCE_CACHE"
                ],
                "type": "LOCAL"
              }
            ],
            "concurrent_build_limit": 0,
            "description": "build notification batch image",
            "encryption_key": "arn:aws:kms:ap-northeast-1:397693451628:alias/aws/s3",
            "environment": [
              {
                "certificate": "",
                "compute_type": "BUILD_GENERAL1_SMALL",
                "environment_variable": [],
                "image": "aws/codebuild/standard:5.0",
                "image_pull_credentials_type": "CODEBUILD",
                "privileged_mode": true,
                "registry_credential": [],
                "type": "LINUX_CONTAINER"
              }
            ],
            "file_system_locations": [],
            "id": "arn:aws:codebuild:ap-northeast-1:397693451628:project/build-notification-batch-image",
            "logs_config": [
              {
                "cloudwatch_logs": [
                  {
                    "group_name": "",
                    "status": "ENABLED",
                    "stream_name": ""
                  }
                ],
                "s3_logs": [
                  {
                    "bucket_owner_access": "",
                    "encryption_disabled": false,
                    "location": "",
                    "status": "DISABLED"
                  }
                ]
              }
            ],
            "name": "build-notification-batch-image",
            "project_visibility": "PRIVATE",
            "public_project_alias": "",
            "queued_timeout": 480,
            "resource_access_role": "",
            "secondary_artifacts": [],
            "secondary_source_version": [],
            "secondary_sources": [],
            "service_role": "arn:aws:iam::397693451628:role/build-image-role",
            "source": [
              {
                "auth": [],
                "build_status_config": [],
                "buildspec": "version: 0.2\nphases:\n  pre_build:\n    commands:\n      - echo Logging in to Amazon ECR...\n      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository\n  build:\n    commands:\n      - DATE=`date +%Y-%m-%d`\n      - COMMIT_ID=$(git log -n 1 --format=%H)\n      - cd notification_batch/Docker\n      - docker build -t 397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository:$DATE -t 397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository:$COMMIT_ID -t 397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository:latest .\n  post_build:\n    commands:\n      - echo post_build\n      - docker push 397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository\n      - echo ----------------------------------------------------------\n      - echo 397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository:$COMMIT_ID としてイメージをプッシュしました\n      - echo ----------------------------------------------------------\n",
                "git_clone_depth": 0,
                "git_submodules_config": [
                  {
                    "fetch_submodules": false
                  }
                ],
                "insecure_ssl": false,
                "location": "https://github.com/takoikatakotako/app-review-terraform.git",
                "report_build_status": false,
                "type": "GITHUB"
              }
            ],
            "source_version": "",
            "tags": {},
            "tags_all": {},
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.notification_batch.aws_ecr_repository.notification_batch_repository",
            "module.notification_batch.aws_iam_role.build_image_role",
            "module.notification_batch.data.aws_iam_policy_document.build_image_assume_role_policy_document",
            "module.notification_batch.data.template_file.api_buildspec_template_file"
          ]
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "notification_batch_repository",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:ap-northeast-1:397693451628:repository/notification-batch-repository",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "id": "notification-batch-repository",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "notification-batch-repository",
            "registry_id": "397693451628",
            "repository_url": "397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "managed",
      "type": "aws_ecs_cluster",
      "name": "notification_batch_cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecs:ap-northeast-1:397693451628:cluster/notification-batch-cluster",
            "capacity_providers": [],
            "configuration": [],
            "default_capacity_provider_strategy": [],
            "id": "arn:aws:ecs:ap-northeast-1:397693451628:cluster/notification-batch-cluster",
            "name": "notification-batch-cluster",
            "setting": [
              {
                "name": "containerInsights",
                "value": "disabled"
              }
            ],
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "managed",
      "type": "aws_ecs_task_definition",
      "name": "notification_batch_task_definition",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ecs:ap-northeast-1:397693451628:task-definition/notification-batch-task-definition:1",
            "container_definitions": "[{\"cpu\":0,\"environment\":[{\"name\":\"NAME\",\"value\":\"おのじゅん\"}],\"essential\":true,\"image\":\"397693451628.dkr.ecr.ap-northeast-1.amazonaws.com/notification-batch-repository\",\"logConfiguration\":{\"logDriver\":\"awslogs\",\"options\":{\"awslogs-group\":\"/ecs/ojichat-task\",\"awslogs-region\":\"ap-northeast-1\",\"awslogs-stream-prefix\":\"ecs\"}},\"mountPoints\":[],\"name\":\"ojichat\",\"portMappings\":[],\"volumesFrom\":[]}]",
            "cpu": "256",
            "ephemeral_storage": [],
            "execution_role_arn": "arn:aws:iam::397693451628:role/ojichat-role",
            "family": "notification-batch-task-definition",
            "id": "notification-batch-task-definition",
            "inference_accelerator": [],
            "ipc_mode": "",
            "memory": "512",
            "network_mode": "awsvpc",
            "pid_mode": "",
            "placement_constraints": [],
            "proxy_configuration": [],
            "requires_compatibilities": [
              "FARGATE"
            ],
            "revision": 1,
            "runtime_platform": [],
            "skip_destroy": false,
            "tags": {},
            "tags_all": {},
            "task_role_arn": "arn:aws:iam::397693451628:role/ojichat-role",
            "volume": []
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.notification_batch.aws_ecr_repository.notification_batch_repository",
            "module.notification_batch.aws_iam_role.role",
            "module.notification_batch.data.aws_iam_policy_document.role",
            "module.notification_batch.data.template_file.notification_batch_container_definitions"
          ]
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::397693451628:policy/ojicaht-policy",
            "description": "for ojichat",
            "id": "arn:aws:iam::397693451628:policy/ojicaht-policy",
            "name": "ojicaht-policy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"iam:PassRole\",\"ecs:RunTask\",\"ecr:GetDownloadUrlForLayer\",\"ecr:GetAuthorizationToken\",\"ecr:BatchGetImage\",\"ecr:BatchCheckLayerAvailability\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAVZGDAPVWEHIBZSKUV",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.notification_batch.data.aws_iam_policy_document.policy"
          ]
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "build_image_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::397693451628:role/build-image-role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"CodebuildExecution\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"codebuild.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2022-06-12T06:18:23Z",
            "description": "",
            "force_detach_policies": false,
            "id": "build-image-role",
            "inline_policy": [
              {
                "name": "terraform-20220612062046382500000001",
                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Logging\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"PushECR\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ecr:UploadLayerPart\",\n        \"ecr:PutImage\",\n        \"ecr:ListImages\",\n        \"ecr:InitiateLayerUpload\",\n        \"ecr:GetRepositoryPolicy\",\n        \"ecr:GetDownloadUrlForLayer\",\n        \"ecr:GetAuthorizationToken\",\n        \"ecr:DescribeRepositories\",\n        \"ecr:DescribeImages\",\n        \"ecr:CompleteLayerUpload\",\n        \"ecr:BatchGetImage\",\n        \"ecr:BatchCheckLayerAvailability\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"codebuild:UpdateReport\",\n        \"codebuild:CreateReportGroup\",\n        \"codebuild:CreateReport\",\n        \"codebuild:BatchPutTestCases\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}"
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "build-image-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAVZGDAPVWEIMSDRARR"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.notification_batch.data.aws_iam_policy_document.build_image_assume_role_policy_document"
          ]
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::397693451628:role/ojichat-role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ecs.amazonaws.com\",\"ecs-tasks.amazonaws.com\",\"events.amazonaws.com\"]},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2022-06-18T14:43:13Z",
            "description": "role for ojichat",
            "force_detach_policies": false,
            "id": "ojichat-role",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::397693451628:policy/ojicaht-policy",
              "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceEventsRole"
            ],
            "max_session_duration": 3600,
            "name": "ojichat-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAVZGDAPVWCG5R6AICR"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.notification_batch.data.aws_iam_policy_document.role"
          ]
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "build_image_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "build-image-role:terraform-20220612062046382500000001",
            "name": "terraform-20220612062046382500000001",
            "name_prefix": null,
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Logging\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"PushECR\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ecr:UploadLayerPart\",\n        \"ecr:PutImage\",\n        \"ecr:ListImages\",\n        \"ecr:InitiateLayerUpload\",\n        \"ecr:GetRepositoryPolicy\",\n        \"ecr:GetDownloadUrlForLayer\",\n        \"ecr:GetAuthorizationToken\",\n        \"ecr:DescribeRepositories\",\n        \"ecr:DescribeImages\",\n        \"ecr:CompleteLayerUpload\",\n        \"ecr:BatchGetImage\",\n        \"ecr:BatchCheckLayerAvailability\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"codebuild:UpdateReport\",\n        \"codebuild:CreateReportGroup\",\n        \"codebuild:CreateReport\",\n        \"codebuild:BatchPutTestCases\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "role": "build-image-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.notification_batch.aws_iam_role.build_image_role",
            "module.notification_batch.data.aws_iam_policy_document.build_image_assume_role_policy_document",
            "module.notification_batch.data.aws_iam_policy_document.build_image_role_policy_document"
          ]
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "event_role_policy_attachment",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ojichat-role-20220618144312472300000001",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceEventsRole",
            "role": "ojichat-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.notification_batch.aws_iam_role.role",
            "module.notification_batch.data.aws_iam_policy_document.role"
          ]
        }
      ]
    },
    {
      "module": "module.notification_batch",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "schedule_policy_attachment",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ojichat-role-20220618144312472600000002",
            "policy_arn": "arn:aws:iam::397693451628:policy/ojicaht-policy",
            "role": "ojichat-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.notification_batch.aws_iam_policy.policy",
            "module.notification_batch.aws_iam_role.role",
            "module.notification_batch.data.aws_iam_policy_document.policy",
            "module.notification_batch.data.aws_iam_policy_document.role"
          ]
        }
      ]
    },
    {
      "module": "module.web_api",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "lambda_role_assume_policy_document",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3693445097",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "lambda.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.web_api",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "lambda_role_iam_policy_document",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4192902640",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\",\n        \"dynamodb:*\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "dynamodb:*",
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.web_api",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "lambda_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::397693451628:policy/lambda-role-policy",
            "description": "",
            "id": "arn:aws:iam::397693451628:policy/lambda-role-policy",
            "name": "lambda-role-policy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\",\"dynamodb:*\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAVZGDAPVWHD6XZNVQC",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.web_api.data.aws_iam_policy_document.lambda_role_iam_policy_document"
          ]
        }
      ]
    },
    {
      "module": "module.web_api",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "lambda_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::397693451628:role/lambda-role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2022-06-10T07:14:14Z",
            "description": "",
            "force_detach_policies": false,
            "id": "lambda-role",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::397693451628:policy/lambda-role-policy"
            ],
            "max_session_duration": 3600,
            "name": "lambda-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAVZGDAPVWALSVI7HMZ"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.web_api.data.aws_iam_policy_document.lambda_role_assume_policy_document"
          ]
        }
      ]
    },
    {
      "module": "module.web_api",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "lambda_role_policy_attachment",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "lambda-role-20220610071814165600000001",
            "policy_arn": "arn:aws:iam::397693451628:policy/lambda-role-policy",
            "role": "lambda-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.web_api.aws_iam_policy.lambda_role_policy",
            "module.web_api.aws_iam_role.lambda_role",
            "module.web_api.data.aws_iam_policy_document.lambda_role_assume_policy_document",
            "module.web_api.data.aws_iam_policy_document.lambda_role_iam_policy_document"
          ]
        }
      ]
    },
    {
      "module": "module.web_api.module.registration_function",
      "mode": "data",
      "type": "archive_file",
      "name": "python_script_archive_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/archive\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "excludes": null,
            "id": "ceb9fd7ab1bfb46e20cd12a725e431acf2617565",
            "output_base64sha256": "IUeEjqM+d2wav4vyd9733JPiudhgvE8pUf1jaJYusgA=",
            "output_file_mode": null,
            "output_md5": "b2b22cd437cf4ee5b3a12c21cf70d9ee",
            "output_path": "web_api/lambda_function/output/registration_function_archive_file.zip",
            "output_sha": "ceb9fd7ab1bfb46e20cd12a725e431acf2617565",
            "output_size": 842,
            "source": [
              {
                "content": "import json\nimport boto3\nimport uuid\nimport traceback\n\ndef main(slack_token: str, app_id: str):\n\n    # Item がすでに存在するかチェック\n    dynamo_db = boto3.resource('dynamodb')\n    table = dynamo_db.Table('slack-table')\n    response = table.get_item(Key={\"slackToken\": slack_token})\n\n    # Item が無く、新規作成の場合\n    if 'Item' not in response:\n        item = {\n            'slackToken': slack_token,\n            'status': 'New',\n            'failDateTime': [],\n            'ios': {\n                app_id: {\n                    'sentEntryIds': []\n                }\n            },\n            'android': {}\n        }\n        table.put_item(Item=item)\n        return {\n            'statusCode': 200,\n            'body': '{\"message\": \"新規作成完了\"}'\n        }\n\n\n    # すでにItemが作成されている場合\n    item = response['Item']\n    ios = item['ios']\n    \n    # アプリIDが登録されていない場合\n    if app_id not in ios:\n        ios[app_id] = {\n            'sentEntryIds': []\n        }\n        item['ios'] = ios\n        table.put_item(Item=item)\n        return {\n            'statusCode': 200,\n            'body': '{\"message\": \"追加完了\"}'\n        }\n\n\n    # 何もしなくてokの場合\n    return {\n        'statusCode': 200,\n        'body': '{\"message\": \"何もしない\"}'\n    }\n\n\ndef lambda_handler(event, context):\n    try:\n        body = json.loads(event['body'])\n        slack_token = body['slackToken']\n        app_id = body['appId']\n        return main(slack_token, app_id)\n    except Exception as e:\n        print(e)\n        return {\n            'statusCode': 500,\n            'body': '{\"message\": \"すでに作成されている場合\"}'\n        }\n",
                "filename": "lambda_function.py"
              }
            ],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": null,
            "source_file": null,
            "type": "zip"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.web_api.module.registration_function",
      "mode": "data",
      "type": "template_file",
      "name": "python_script_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "a83f34848cd1de41ef1426d2b1114658675452c999bf0f363d4aa8daf09cd4d4",
            "rendered": "import json\nimport boto3\nimport uuid\nimport traceback\n\ndef main(slack_token: str, app_id: str):\n\n    # Item がすでに存在するかチェック\n    dynamo_db = boto3.resource('dynamodb')\n    table = dynamo_db.Table('slack-table')\n    response = table.get_item(Key={\"slackToken\": slack_token})\n\n    # Item が無く、新規作成の場合\n    if 'Item' not in response:\n        item = {\n            'slackToken': slack_token,\n            'status': 'New',\n            'failDateTime': [],\n            'ios': {\n                app_id: {\n                    'sentEntryIds': []\n                }\n            },\n            'android': {}\n        }\n        table.put_item(Item=item)\n        return {\n            'statusCode': 200,\n            'body': '{\"message\": \"新規作成完了\"}'\n        }\n\n\n    # すでにItemが作成されている場合\n    item = response['Item']\n    ios = item['ios']\n    \n    # アプリIDが登録されていない場合\n    if app_id not in ios:\n        ios[app_id] = {\n            'sentEntryIds': []\n        }\n        item['ios'] = ios\n        table.put_item(Item=item)\n        return {\n            'statusCode': 200,\n            'body': '{\"message\": \"追加完了\"}'\n        }\n\n\n    # 何もしなくてokの場合\n    return {\n        'statusCode': 200,\n        'body': '{\"message\": \"何もしない\"}'\n    }\n\n\ndef lambda_handler(event, context):\n    try:\n        body = json.loads(event['body'])\n        slack_token = body['slackToken']\n        app_id = body['appId']\n        return main(slack_token, app_id)\n    except Exception as e:\n        print(e)\n        return {\n            'statusCode': 500,\n            'body': '{\"message\": \"すでに作成されている場合\"}'\n        }\n",
            "template": "import json\nimport boto3\nimport uuid\nimport traceback\n\ndef main(slack_token: str, app_id: str):\n\n    # Item がすでに存在するかチェック\n    dynamo_db = boto3.resource('dynamodb')\n    table = dynamo_db.Table('slack-table')\n    response = table.get_item(Key={\"slackToken\": slack_token})\n\n    # Item が無く、新規作成の場合\n    if 'Item' not in response:\n        item = {\n            'slackToken': slack_token,\n            'status': 'New',\n            'failDateTime': [],\n            'ios': {\n                app_id: {\n                    'sentEntryIds': []\n                }\n            },\n            'android': {}\n        }\n        table.put_item(Item=item)\n        return {\n            'statusCode': 200,\n            'body': '{\"message\": \"新規作成完了\"}'\n        }\n\n\n    # すでにItemが作成されている場合\n    item = response['Item']\n    ios = item['ios']\n    \n    # アプリIDが登録されていない場合\n    if app_id not in ios:\n        ios[app_id] = {\n            'sentEntryIds': []\n        }\n        item['ios'] = ios\n        table.put_item(Item=item)\n        return {\n            'statusCode': 200,\n            'body': '{\"message\": \"追加完了\"}'\n        }\n\n\n    # 何もしなくてokの場合\n    return {\n        'statusCode': 200,\n        'body': '{\"message\": \"何もしない\"}'\n    }\n\n\ndef lambda_handler(event, context):\n    try:\n        body = json.loads(event['body'])\n        slack_token = body['slackToken']\n        app_id = body['appId']\n        return main(slack_token, app_id)\n    except Exception as e:\n        print(e)\n        return {\n            'statusCode': 500,\n            'body': '{\"message\": \"すでに作成されている場合\"}'\n        }\n",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.web_api.module.registration_function",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "lambda_function",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:ap-northeast-1:397693451628:function:registration-function",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "DISCORD_WEBHOOK_URL": "xxx"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": "web_api/lambda_function/output/registration_function_archive_file.zip",
            "function_name": "registration-function",
            "handler": "lambda_function.lambda_handler",
            "id": "registration-function",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:397693451628:function:registration-function/invocations",
            "kms_key_arn": "",
            "last_modified": "2022-06-18T14:32:55.000+0000",
            "layers": [],
            "memory_size": 128,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:ap-northeast-1:397693451628:function:registration-function:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::397693451628:role/lambda-role",
            "runtime": "python3.9",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "source_code_hash": "IUeEjqM+d2wav4vyd9733JPiudhgvE8pUf1jaJYusgA=",
            "source_code_size": 842,
            "tags": {},
            "tags_all": {},
            "timeout": 30,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.web_api.aws_iam_role.lambda_role",
            "module.web_api.data.aws_iam_policy_document.lambda_role_assume_policy_document",
            "module.web_api.module.registration_function.data.archive_file.python_script_archive_file",
            "module.web_api.module.registration_function.data.template_file.python_script_file"
          ]
        }
      ]
    },
    {
      "module": "module.web_api.module.registration_function",
      "mode": "managed",
      "type": "aws_lambda_function_url",
      "name": "function_url",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "authorization_type": "NONE",
            "cors": [
              {
                "allow_credentials": false,
                "allow_headers": [
                  "content-type"
                ],
                "allow_methods": [
                  "POST"
                ],
                "allow_origins": [
                  "*"
                ],
                "expose_headers": [
                  "content-type"
                ],
                "max_age": 0
              }
            ],
            "function_arn": "arn:aws:lambda:ap-northeast-1:397693451628:function:registration-function",
            "function_name": "registration-function",
            "function_url": "https://3asu6ywuha2eezgaqlw2sf7ghe0yzzho.lambda-url.ap-northeast-1.on.aws/",
            "id": "registration-function",
            "qualifier": "",
            "timeouts": null,
            "url_id": "3asu6ywuha2eezgaqlw2sf7ghe0yzzho"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.web_api.aws_iam_role.lambda_role",
            "module.web_api.data.aws_iam_policy_document.lambda_role_assume_policy_document",
            "module.web_api.module.registration_function.aws_lambda_function.lambda_function",
            "module.web_api.module.registration_function.data.archive_file.python_script_archive_file",
            "module.web_api.module.registration_function.data.template_file.python_script_file"
          ]
        }
      ]
    },
    {
      "module": "module.web_api.module.unregistration_function",
      "mode": "data",
      "type": "archive_file",
      "name": "python_script_archive_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/archive\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "excludes": null,
            "id": "0cfd128e4967313893474b587d493dfa1901914c",
            "output_base64sha256": "6XbwVEDYRQJwh2T4R99hFHClECHNdz6H3/an48/7/BA=",
            "output_file_mode": null,
            "output_md5": "8115dfc062b02d66387f9cca25e88d53",
            "output_path": "web_api/lambda_function/output/unregistration_function_archive_file.zip",
            "output_sha": "0cfd128e4967313893474b587d493dfa1901914c",
            "output_size": 561,
            "source": [
              {
                "content": "import json\nimport boto3\nimport uuid\nimport traceback\n\ndef main(slack_token: str):\n    # Itemを削除\n    dynamo_db = boto3.resource('dynamodb')\n    table = dynamo_db.Table('slack-table')\n    table.delete_item(Key={\"slackToken\": slack_token})\n\n    # 何もしなくてokの場合\n    return {\n        'statusCode': 200,\n        'body': '{\"message\": \"何もしない\"}'\n    }\n\n\ndef lambda_handler(event, context):\n    try:\n        body = json.loads(event['body'])\n        slack_token = body['slackToken']\n        return main(slack_token)\n    except Exception as e:\n        print(e)\n        return {\n            'statusCode': 500,\n            'body': '{\"message\": \"すでに作成されている場合\"}'\n        }\n",
                "filename": "lambda_function.py"
              }
            ],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": null,
            "source_file": null,
            "type": "zip"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.web_api.module.unregistration_function",
      "mode": "data",
      "type": "template_file",
      "name": "python_script_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "d7504901da848fbd2269d9997be51a3dd5511ae0a31adfa8b3d1e95a1c928d81",
            "rendered": "import json\nimport boto3\nimport uuid\nimport traceback\n\ndef main(slack_token: str):\n    # Itemを削除\n    dynamo_db = boto3.resource('dynamodb')\n    table = dynamo_db.Table('slack-table')\n    table.delete_item(Key={\"slackToken\": slack_token})\n\n    # 何もしなくてokの場合\n    return {\n        'statusCode': 200,\n        'body': '{\"message\": \"何もしない\"}'\n    }\n\n\ndef lambda_handler(event, context):\n    try:\n        body = json.loads(event['body'])\n        slack_token = body['slackToken']\n        return main(slack_token)\n    except Exception as e:\n        print(e)\n        return {\n            'statusCode': 500,\n            'body': '{\"message\": \"すでに作成されている場合\"}'\n        }\n",
            "template": "import json\nimport boto3\nimport uuid\nimport traceback\n\ndef main(slack_token: str):\n    # Itemを削除\n    dynamo_db = boto3.resource('dynamodb')\n    table = dynamo_db.Table('slack-table')\n    table.delete_item(Key={\"slackToken\": slack_token})\n\n    # 何もしなくてokの場合\n    return {\n        'statusCode': 200,\n        'body': '{\"message\": \"何もしない\"}'\n    }\n\n\ndef lambda_handler(event, context):\n    try:\n        body = json.loads(event['body'])\n        slack_token = body['slackToken']\n        return main(slack_token)\n    except Exception as e:\n        print(e)\n        return {\n            'statusCode': 500,\n            'body': '{\"message\": \"すでに作成されている場合\"}'\n        }\n",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.web_api.module.unregistration_function",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "lambda_function",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:ap-northeast-1:397693451628:function:unregistration-function",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "DISCORD_WEBHOOK_URL": "xxx"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": "web_api/lambda_function/output/unregistration_function_archive_file.zip",
            "function_name": "unregistration-function",
            "handler": "lambda_function.lambda_handler",
            "id": "unregistration-function",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:397693451628:function:unregistration-function/invocations",
            "kms_key_arn": "",
            "last_modified": "2022-06-11T15:04:53.598+0000",
            "layers": [],
            "memory_size": 128,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:ap-northeast-1:397693451628:function:unregistration-function:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::397693451628:role/lambda-role",
            "runtime": "python3.9",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "source_code_hash": "6XbwVEDYRQJwh2T4R99hFHClECHNdz6H3/an48/7/BA=",
            "source_code_size": 561,
            "tags": {},
            "tags_all": {},
            "timeout": 30,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.web_api.aws_iam_role.lambda_role",
            "module.web_api.data.aws_iam_policy_document.lambda_role_assume_policy_document",
            "module.web_api.module.unregistration_function.data.archive_file.python_script_archive_file",
            "module.web_api.module.unregistration_function.data.template_file.python_script_file"
          ]
        }
      ]
    },
    {
      "module": "module.web_api.module.unregistration_function",
      "mode": "managed",
      "type": "aws_lambda_function_url",
      "name": "function_url",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "authorization_type": "NONE",
            "cors": [
              {
                "allow_credentials": false,
                "allow_headers": [
                  "content-type"
                ],
                "allow_methods": [
                  "POST"
                ],
                "allow_origins": [
                  "*"
                ],
                "expose_headers": [
                  "content-type"
                ],
                "max_age": 0
              }
            ],
            "function_arn": "arn:aws:lambda:ap-northeast-1:397693451628:function:unregistration-function",
            "function_name": "unregistration-function",
            "function_url": "https://w7pgcy7jr546b7v3bplsaruzoe0zcqdx.lambda-url.ap-northeast-1.on.aws/",
            "id": "unregistration-function",
            "qualifier": "",
            "timeouts": null,
            "url_id": "w7pgcy7jr546b7v3bplsaruzoe0zcqdx"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.web_api.aws_iam_role.lambda_role",
            "module.web_api.data.aws_iam_policy_document.lambda_role_assume_policy_document",
            "module.web_api.module.unregistration_function.aws_lambda_function.lambda_function",
            "module.web_api.module.unregistration_function.data.archive_file.python_script_archive_file",
            "module.web_api.module.unregistration_function.data.template_file.python_script_file"
          ]
        }
      ]
    },
    {
      "module": "module.web_front",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "iam_policy_document",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4077681542",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AddPerm\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:GetObject\",\n      \"Resource\": \"arn:aws:s3:::sandbox-web-front-bucket/*\",\n      \"Principal\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "s3:GetObject"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "*"
                    ],
                    "type": "*"
                  }
                ],
                "resources": [
                  "arn:aws:s3:::sandbox-web-front-bucket/*"
                ],
                "sid": "AddPerm"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.web_front",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "s3_bucket",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::sandbox-web-front-bucket",
            "bucket": "sandbox-web-front-bucket",
            "bucket_domain_name": "sandbox-web-front-bucket.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "sandbox-web-front-bucket.s3.ap-northeast-1.amazonaws.com",
            "cors_rule": [
              {
                "allowed_headers": [
                  "*"
                ],
                "allowed_methods": [
                  "GET"
                ],
                "allowed_origins": [
                  "*"
                ],
                "expose_headers": [],
                "max_age_seconds": 3000
              }
            ],
            "force_destroy": false,
            "grant": [
              {
                "id": "5d0f466ce156fda9af0f84fae483b5e92fe53a3365d4f206265ed8686f1acc7b",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z2M4EHUR26P7ZW",
            "id": "sandbox-web-front-bucket",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"AddPerm\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Action\":\"s3:GetObject\",\"Resource\":\"arn:aws:s3:::sandbox-web-front-bucket/*\"}]}",
            "region": "ap-northeast-1",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {},
            "tags_all": {},
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [
              {
                "error_document": "",
                "index_document": "index.html",
                "redirect_all_requests_to": "",
                "routing_rules": ""
              }
            ],
            "website_domain": "s3-website-ap-northeast-1.amazonaws.com",
            "website_endpoint": "sandbox-web-front-bucket.s3-website-ap-northeast-1.amazonaws.com"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.web_front",
      "mode": "managed",
      "type": "aws_s3_bucket_cors_configuration",
      "name": "cors_configuration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "sandbox-web-front-bucket",
            "cors_rule": [
              {
                "allowed_headers": [
                  "*"
                ],
                "allowed_methods": [
                  "GET"
                ],
                "allowed_origins": [
                  "*"
                ],
                "expose_headers": [],
                "id": "",
                "max_age_seconds": 3000
              }
            ],
            "expected_bucket_owner": "",
            "id": "sandbox-web-front-bucket"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.web_front.aws_s3_bucket.s3_bucket"
          ]
        }
      ]
    },
    {
      "module": "module.web_front",
      "mode": "managed",
      "type": "aws_s3_bucket_policy",
      "name": "s3_bucket_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "sandbox-web-front-bucket",
            "id": "sandbox-web-front-bucket",
            "policy": "{\"Statement\":[{\"Action\":\"s3:GetObject\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Resource\":\"arn:aws:s3:::sandbox-web-front-bucket/*\",\"Sid\":\"AddPerm\"}],\"Version\":\"2012-10-17\"}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.web_front.aws_s3_bucket.s3_bucket",
            "module.web_front.data.aws_iam_policy_document.iam_policy_document"
          ]
        }
      ]
    },
    {
      "module": "module.web_front",
      "mode": "managed",
      "type": "aws_s3_bucket_website_configuration",
      "name": "website_configuration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "sandbox-web-front-bucket",
            "error_document": [],
            "expected_bucket_owner": "",
            "id": "sandbox-web-front-bucket",
            "index_document": [
              {
                "suffix": "index.html"
              }
            ],
            "redirect_all_requests_to": [],
            "routing_rule": [],
            "routing_rules": "",
            "website_domain": "s3-website-ap-northeast-1.amazonaws.com",
            "website_endpoint": "sandbox-web-front-bucket.s3-website-ap-northeast-1.amazonaws.com"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.web_front.aws_s3_bucket.s3_bucket"
          ]
        }
      ]
    }
  ]
}
